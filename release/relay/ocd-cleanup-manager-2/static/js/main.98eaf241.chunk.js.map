{"version":3,"sources":["../../../../src/api/base.ts","../../../../src/api/cleanup-table.ts","../../../../src/api/config.ts","../../../../src/api/ruleset.ts","../../../../src/api/statistics.ts","../../../../src/data/ocd-rule.ts","api.ts","../../../src/constants.ts","toaster.tsx","util.ts","components/SelectOcdAction.tsx","components/OcdRulePicker.tsx","components/OcdItemTable.tsx","components/PanelCategorizedItems.tsx","components/InputGroupAffixedFileName.tsx","components/PanelConfig.tsx","components/PanelInformation.tsx","components/PanelUncategorizedItems.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AUTO","BREAK","CLAN","CLST","DISC","DISP","GIFT","KEEP","MAKE","MALL","PULV","TODO","UNTN","USE","ApiError","message","code","response","Error","prototype","name","fetchFromApi","path","method","body","a","preparedRequest","prepareRequestForSerialization","fetch","URLSearchParams","fetchResponse","ok","text","console","error","statusText","status","json","fetchSaveOcdCleanupConfig","config","shouldCopyDataFiles","CONFIG_ROUTE","toaster","Toaster","create","maxToasts","setErrorToast","key","errorMessage","show","icon","intent","String","dismiss","setSavingToast","isSaving","MAX_MALL_PRICE","shouldWarnOnPulverize","item","isTradable","UNKNOWN_OCD_ACTION","isOcdActionOrUnknown","value","isOcdAction","SelectOcdAction","React","memo","className","onChange","restProps","classNames","e","target","canMall","canBreak","canAutosell","canDiscard","style","color","Colors","ORANGE2","canGift","canStash","canPulverize","undefined","canMake","canUntinker","canUse","canCloset","canDisplay","OcdRulePicker","helperText","rule","handleActionChange","useCallback","action","oldRule","recipent","shouldUseCreatableOnly","targetItem","minPrice","Intent","WARNING","contentClassName","inline","DANGER","label","placeholder","small","checked","currentTarget","majorStepSize","max","min","minorStepSize","onValueChange","Number","isInteger","Math","stepSize","OcdItemTableRow","str","inventory","onRuleChange","minimal","onClick","descid","window","open","focus","itemDescriptionPopup","title","useMemo","alt","src","image","href","rel","dangerouslySetInnerHTML","__html","id","closet","storage","displayCase","mallPrice","toLocaleString","replace","isMallPriceAtMinimum","htmlTitle","disabled","fill","keepAmount","newRuleOrReducer","areEqual","OcdItemTable","disableReset","disableSave","items","ocdRules","onReset","onSave","defaultRuleChangeHandler","itemId","prevOcdRules","newRule","scrollTimerRef","useRef","isScrollingRef","doScroll","type","amount","current","requestAnimationFrame","outerListRef","behavior","top","useEffect","cancelAnimationFrame","innerListRef","itemData","itemKeyCallback","index","data","editorButtons","popoverClassName","Popover2Classes","POPOVER2_CONTENT_SIZING","content","OcdItemTableRowWrapper","isScrolling","disableWidth","measuredHeight","height","onKeyDown","event","ROW_HEIGHT","parseFloat","tabIndex","innerRef","itemCount","length","itemKey","itemSize","outerRef","overscanCount","useIsScrolling","width","OCD_TAB_TYPES","all","craft","display","dispose","gift","keep","mall","pulverize","reminder","search","stash","untinker","use","EMPTY_OCD_RULES","Object","freeze","PanelCategorizedItems","useSWR","CLEANUP_TABLES_CATEGORIZED_ROUTE","result","sort","itemA","itemB","loadingError","isLoading","isValidating","mutate","useState","activeOcdRules","setActiveOcdRules","handleReset","useAsyncCallback","RULESET_ROUTE","success","JSON","stringify","savingError","handleSave","execute","loading","handleOcdRuleChange","prevRule","itemName","ocdActionToString","tabId","setTabId","itemsForTabs","reduce","push","actualTabId","hasOwnProperty","hasChanges","Boolean","makeItemTable","isOcdTabType","renderActiveTabPanelOnly","selectedTabId","panel","panelClassName","description","InputGroupAffixedFileName","fileNamePrefix","fileNameSuffix","leftElement","rightElement","OCD_RULESET_PREFIX","OCD_STOCK_PREFIX","TXT_SUFFIX","DialogAskCopyOnSave","changedFiles","isOpen","onCancel","onSaveWithCopy","onSaveWithoutCopy","canEscapeKeyClose","canOutsideClickClose","onClose","Classes","DIALOG_BODY","map","entry","oldName","newName","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","isOneOf","compareWith","includes","PanelConfig","baseConfig","setConfig","dialogProps","setDialogProps","closeDialog","dataFileName","stockFileName","saveConfig","dequal","setConfigSafe","configOrReducer","isDisabled","isMallMultiInputDisabled","canUseMallMulti","emptyClosetMode","selectedValue","SKELETON","mallPricingMode","simulateOnly","mallMultiName","mallMultiKmailMessage","BULLET","PanelInformation","STATISTICS_ROUTE","categorizedCount","values","categorizedItemCounts","acc","sum","bordered","condensed","uncategorizedItemCount","ORANGE1","PanelUncategorizedItems","CLEANUP_TABLES_UNCATEGORIZED_ROUTE","isLoadingData","setOcdRules","resetOcdRules","ocdRulesPatch","doSave","setAllItemsToMall","setAllItemsToCloset","setAllItemsToKeep","some","MainTabs","categorized","information","uncategorized","DEFAULT_TAB","ensureValidTabType","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98eaf241.chunk.js","sourcesContent":["/**\r\n * @file Defines base types for API requests and responses.\r\n */\r\nfunction isValidRequestMethod(value) {\r\n    return value === 'get' || value === 'patch' || value === 'post';\r\n}\r\nfunction isRequestBasePropertyName(value) {\r\n    return value === 'method' || value === 'path';\r\n}\r\n/**\r\n * Converts a `RequestBase` object to a flat object suitable for serialization.\r\n *\r\n * A client should serialize the returned value using `URLSearchParams()` before\r\n * sending it over the network.\r\n */\r\nexport function prepareRequestForSerialization(request) {\r\n    var serializedRequest = {};\r\n    for (var _i = 0, _a = Object.keys(request); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        // Known keys should not be serialized, but passed as-is.\r\n        if (isRequestBasePropertyName(key)) {\r\n            serializedRequest[key] = request[key];\r\n        }\r\n        else {\r\n            // All other keys should be serialized, even if their values are strings.\r\n            // JSON.stringify() can return undefined if the input is undefined.\r\n            // TypeScript currently doesn't check this, so we must do so manually.\r\n            var serializedValue = JSON.stringify(request[key]);\r\n            // Skip undefined fields\r\n            if (serializedValue !== undefined) {\r\n                serializedRequest[key] = serializedValue;\r\n            }\r\n        }\r\n    }\r\n    return serializedRequest;\r\n}\r\n/**\r\n * Converts a flat object to a `RequestBase`.\r\n *\r\n * A server should call this on the return value of `formFields()`\r\n * (analogous to `request.body` in Express.js).\r\n * @param wrappedRequest Wrapped request object\r\n * @throws {Error} If any `RequestBase` properties are missing or invalid\r\n */\r\nexport function unwrapDeserializedRequest(wrappedRequest) {\r\n    // Cast to Partial<> so that TypeScript type-checks our property access\r\n    var uncheckedRequest = wrappedRequest;\r\n    if (typeof uncheckedRequest.method !== 'string') {\r\n        throw new Error('Missing URL/form parameter: method');\r\n    }\r\n    else if (!isValidRequestMethod(uncheckedRequest.method)) {\r\n        throw new Error(\"Invalid URL/form parameter: method=\" + uncheckedRequest.method);\r\n    }\r\n    if (typeof uncheckedRequest.path !== 'string') {\r\n        throw new Error('Missing URL/form parameter: path');\r\n    }\r\n    var request = {};\r\n    for (var _i = 0, _a = Object.keys(wrappedRequest); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        // Known keys are passed as-is.\r\n        // All other keys are deserialized.\r\n        request[key] = isRequestBasePropertyName(key)\r\n            ? wrappedRequest[key]\r\n            : JSON.parse(wrappedRequest[key]);\r\n    }\r\n    return request;\r\n}\r\n//# sourceMappingURL=base.js.map","/**\r\n * @file Defines routes for Cleanup Tables.\r\n */\r\nexport var CLEANUP_TABLES_CATEGORIZED_ROUTE = '/cleanup-tables/categorized';\r\nexport var CLEANUP_TABLES_UNCATEGORIZED_ROUTE = '/cleanup-tables/uncategorized';\r\n//# sourceMappingURL=cleanup-table.js.map","/**\r\n * @file Defines requests and responses for OCD-Cleanup settings.\r\n */\r\nexport var CONFIG_ROUTE = '/config';\r\n//# sourceMappingURL=config.js.map","/**\r\n * @file Defines requests and responses for OCD rulesets.\r\n */\r\nexport var RULESET_ROUTE = '/ruleset';\r\n//# sourceMappingURL=ruleset.js.map","/**\r\n * @file Endpoint for general statistics about OCD-Cleanup.\r\n */\r\nexport var STATISTICS_ROUTE = '/statistics';\r\n//# sourceMappingURL=statistics.js.map","/**\r\n * Object whose keys define what string constants make up the `OcdAction` type.\r\n * Also used to check at runtime if a string belongs to the `OcdAction` type.\r\n * The values are unused; they can be anything.\r\n */\r\nvar _ocdActions = Object.freeze({\r\n    AUTO: 0,\r\n    BREAK: 0,\r\n    CLAN: 0,\r\n    CLST: 0,\r\n    DISC: 0,\r\n    DISP: 0,\r\n    GIFT: 0,\r\n    KEEP: 0,\r\n    MAKE: 0,\r\n    MALL: 0,\r\n    PULV: 0,\r\n    TODO: 0,\r\n    UNTN: 0,\r\n    USE: 0,\r\n});\r\n/**\r\n * Checks if the given value is a valid `OcdAction` type.\r\n */\r\nexport var isOcdAction = function (value) {\r\n    return typeof value === 'string' &&\r\n        Object.prototype.hasOwnProperty.call(_ocdActions, value);\r\n};\r\n//# sourceMappingURL=ocd-rule.js.map","/**\n * @file Methods for communicating with the relay script\n */\n\nimport {\n  CLEANUP_TABLES_CATEGORIZED_ROUTE,\n  CLEANUP_TABLES_UNCATEGORIZED_ROUTE,\n  CONFIG_ROUTE,\n  ErrorResponseBase,\n  INVENTORY_ROUTE,\n  OcdCleanupConfig,\n  prepareRequestForSerialization,\n  ReadonlyOcdRuleset,\n  ReadonlyOcdRulesetPatch,\n  RELAY_SCRIPT_FILE,\n  Request,\n  RequestMethodFor,\n  Response,\n  Routes,\n  RULESET_ROUTE,\n  STATISTICS_ROUTE,\n} from '@ocd-cleanup/common';\n\n/**\n * API error class. Thrown when the API returns an error response.\n */\nexport class ApiError extends Error {\n  /** Error code. This does _not_ map 1:1 to HTTP error codes. */\n  readonly code: number;\n  /** Error response object returned by the API. */\n  readonly response: unknown;\n\n  constructor(message: string, code: number, response: unknown) {\n    super(message);\n    this.code = code;\n    this.response = response;\n  }\n}\nApiError.prototype.name = 'ApiError';\n\n/**\n * Fetches data using routes and methods defined in `@ocd-cleanup/common`.\n * @param path Request route\n * @param method Request method\n * @return Asynchronous fetcher callback\n * @throws {ApiError}\n */\nconst fetchFromApi = async <\n  Path extends keyof Routes,\n  Method extends RequestMethodFor<Path>\n>(\n  path: Path,\n  method: Method,\n  body: Readonly<Omit<Request<Path, Method>, 'path' | 'method'>>\n) => {\n  const preparedRequest = prepareRequestForSerialization({\n    path,\n    method,\n    ...body,\n  });\n\n  // KoLmafia requires the `relay=true` parameter in order to execute JavaScript\n  // -based relay scripts.\n  const fetchResponse = await fetch(`/${RELAY_SCRIPT_FILE}?relay=true`, {\n    body: new URLSearchParams(preparedRequest),\n    method: 'POST',\n  });\n  if (!fetchResponse.ok) {\n    let text;\n    try {\n      text = await fetchResponse.text();\n    } catch (e) {\n      // Crude approach, but text() only fails under rare circumstances...\n      console.error(e);\n    }\n    throw new ApiError(fetchResponse.statusText, fetchResponse.status, text);\n  }\n\n  let response;\n  try {\n    response = (await fetchResponse.json()) as\n      | Response<Path, Method>\n      | ErrorResponseBase;\n  } catch (error) {\n    throw new ApiError(\n      `Invalid JSON returned from server (${error})\\nResponse: ${response}`,\n      500,\n      response\n    );\n  }\n\n  if ('error' in response) {\n    throw new ApiError(\n      response.error.message,\n      response.error.code,\n      response.error.message\n    );\n  }\n  return response;\n};\n\nexport const fetchGetCleanupTableCategorized = () =>\n  fetchFromApi(CLEANUP_TABLES_CATEGORIZED_ROUTE, 'get', {});\n\nexport const fetchGetCleanupTableUncategorized = () =>\n  fetchFromApi(CLEANUP_TABLES_UNCATEGORIZED_ROUTE, 'get', {});\n\nexport const fetchSaveOcdRuleset = (ocdRules: ReadonlyOcdRuleset) =>\n  fetchFromApi(RULESET_ROUTE, 'post', {ocdRules});\n\nexport const fetchPatchOcdRuleset = (ocdRulesPatch: ReadonlyOcdRulesetPatch) =>\n  fetchFromApi(RULESET_ROUTE, 'patch', {ocdRulesPatch});\n\nexport const fetchInventoryState = () =>\n  fetchFromApi(INVENTORY_ROUTE, 'get', {});\n\nexport const fetchGetOcdCleanupConfig = () =>\n  fetchFromApi(CONFIG_ROUTE, 'get', {});\n\nexport const fetchSaveOcdCleanupConfig = (\n  config: Readonly<OcdCleanupConfig>,\n  shouldCopyDataFiles?: boolean\n) => fetchFromApi(CONFIG_ROUTE, 'post', {config, shouldCopyDataFiles});\n\nexport const fetchGetStatistics = () =>\n  fetchFromApi(STATISTICS_ROUTE, 'get', {});\n","/**\r\n * @file Provides constants necessary for piecing the application together.\r\n */\r\n/**\r\n * Relative path to the directory that contains assets (HTML, CSS, JS) for\r\n * OCD-Cleanup Manager.\r\n *\r\n * Note: This must be kept in sync with `BUILD_PATH` in `/packages/manager/.env`\r\n */\r\nexport var RELAY_DIR = '/ocd-cleanup-manager-2';\r\n/**\r\n * Relative path to the HTML skeleton page for OCD-Cleanup Manager.\r\n * The relay API script will serve this page to the user.\r\n */\r\nexport var RELAY_HTML_PATH = RELAY_DIR + \"/index.html\";\r\n/**\r\n * Name of the relay API script file for OCD-Cleanup.\r\n * OCD-Cleanup Manager uses this to construct the request URL.\r\n * This is also used by build/release scripts.\r\n */\r\nexport var RELAY_SCRIPT_FILE = 'relay_OCD-Cleanup_Manager_2_(alpha).js';\r\n//# sourceMappingURL=constants.js.map","/**\n * @file Provides methods for toast-based notifications.\n */\n\nimport {Toaster} from '@blueprintjs/core';\nimport React from 'react';\nimport {ApiError} from './api';\n\n/** Globally shared `<Toaster>` instance for displaying notifications. */\nexport const toaster = Toaster.create({maxToasts: 1});\n\n/**\n * Render `error` as a toast message.\n * @param error Error object. If this is a falsy value, the toast message will\n *    be removed.\n * @param errorMessage Message to show\n * @param key Used to uniquely identify the toast message\n */\nexport const setErrorToast = (\n  key: string,\n  error: unknown,\n  errorMessage: string\n) => {\n  if (error) {\n    toaster.show(\n      {\n        icon: 'warning-sign',\n        intent: 'warning',\n        message:\n          error instanceof ApiError ? (\n            <>\n              {errorMessage}: {error.message}\n              <br />\n              Response: {String(error.response)}\n            </>\n          ) : (\n            `${errorMessage}: ${error}`\n          ),\n      },\n      key\n    );\n  } else {\n    toaster.dismiss(key);\n  }\n};\n\n/**\n * Display an informational toast message.\n * @param message Message to show\n */\nexport const showInfoToast = (message: string) => {\n  toaster.show({icon: 'info-sign', message});\n};\n\n/**\n * Display a toast message to indicate that the app is saving something.\n * @param key Used to uniquely identify the toast message\n * @param isSaving Whether to show or hide the toast\n * @param message Message to show\n */\nexport const setSavingToast = (\n  key: string,\n  isSaving: boolean,\n  message: string\n) => {\n  if (isSaving) {\n    toaster.show({icon: 'floppy-disk', intent: 'primary', message}, key);\n  } else {\n    toaster.dismiss(key);\n  }\n};\n","/**\n * @file Utilities that don't quite fit anywhere else.\n */\n\nimport {OcdAction, OcdItem} from '@ocd-cleanup/common';\n\n/**\n * Maximum possible mallsell price for any item.\n * This is a limit enforced by KoL.\n */\nexport const MAX_MALL_PRICE = 999_999_999 as const;\n\n/**\n * Zero-width space character. This can be used to allow browsers to break long\n * words across multiple lines, or as an empty placeholder.\n */\nexport const ZWSP = '\\u200B';\n\n/**\n * @param action OCD leanup action\n * @return Human-readable short name for the action\n */\nexport const ocdActionToString = (action: OcdAction): string => {\n  switch (action) {\n    case 'AUTO':\n      return 'Autosell';\n    case 'BREAK':\n      return 'Break apart';\n    case 'CLAN':\n      return 'Put in clan stash';\n    case 'CLST':\n      return 'Closet';\n    case 'DISC':\n      return 'Discard';\n    case 'DISP':\n      return 'Display';\n    case 'GIFT':\n      return 'Send as gift';\n    case 'KEEP':\n      return 'Keep all';\n    case 'MAKE':\n      return 'Craft';\n    case 'MALL':\n      return 'Mall sale';\n    case 'PULV':\n      return 'Pulverize';\n    case 'TODO':\n      return 'Reminder';\n    case 'UNTN':\n      return 'Untinker';\n    case 'USE':\n      return 'Use';\n    default:\n      // If we forget an action, TypeScript will catch this as a compile error\n      return ((n: never) => n)(action);\n  }\n};\n\n/**\n * @param item Item type to check\n * @return Whether OCD-Cleanup Manager should warn about pulverizing the item\n */\nexport const shouldWarnOnPulverize = (item: Readonly<OcdItem>): boolean =>\n  !item.isTradable;\n\n/**\n * Identity function that returns the first argument as-is.\n * This is primarily intended to perform compile-time type-checks against union\n * types or enums.\n * **This does NOT perform any runtime type checks!**\n * @param value\n * @return `value` unmodified\n */\nexport const typeCheck = <T>(value: T) => value;\n","import {Colors, HTMLSelect} from '@blueprintjs/core';\nimport {isOcdAction, OcdAction, OcdItem} from '@ocd-cleanup/common';\nimport classNames from 'classnames';\nimport React from 'react';\nimport {shouldWarnOnPulverize, typeCheck} from '../util';\nimport './SelectOcdAction.css';\n\n/**\n * A fallback value used to denote uncategorized items in the `<select>`.\n */\nexport const UNKNOWN_OCD_ACTION = 'UNKN';\nexport type OcdActionOrUnknown = OcdAction | typeof UNKNOWN_OCD_ACTION;\n\nconst isOcdActionOrUnknown = (value: unknown): value is OcdActionOrUnknown =>\n  value === UNKNOWN_OCD_ACTION || isOcdAction(value);\n\ninterface SelectOcdActionPropsBase {\n  item: Readonly<OcdItem>;\n  onChange: (value: OcdActionOrUnknown) => void;\n  value: OcdActionOrUnknown;\n}\n\ninterface SelectOcdActionProps\n  extends SelectOcdActionPropsBase,\n    Omit<\n      React.ComponentProps<typeof HTMLSelect>,\n      keyof SelectOcdActionPropsBase\n    > {}\n\n/**\n * `<HTMLSelect>` element for picking an OCD-Cleanup action.\n */\nexport const SelectOcdAction = React.memo(function SelectOcdAction({\n  className,\n  item,\n  onChange,\n  value,\n  ...restProps\n}: SelectOcdActionProps) {\n  return (\n    <HTMLSelect\n      className={classNames(`OcdRulePicker__SelectAction`, className)}\n      onChange={e =>\n        isOcdActionOrUnknown(e.target.value) && onChange(e.target.value)\n      }\n      value={value}\n      {...restProps}\n    >\n      <option value={typeCheck<OcdActionOrUnknown>(UNKNOWN_OCD_ACTION)}>\n        (uncategorized)\n      </option>\n      <option value={typeCheck<OcdActionOrUnknown>('KEEP')}>Keep all</option>\n      {item.canMall && (\n        <option value={typeCheck<OcdActionOrUnknown>('MALL')}>Mall sale</option>\n      )}\n      {item.canBreak && (\n        <option value={typeCheck<OcdActionOrUnknown>('BREAK')}>\n          Break apart\n        </option>\n      )}\n      {item.canAutosell && (\n        <option value={typeCheck<OcdActionOrUnknown>('AUTO')}>Autosell</option>\n      )}\n      {item.canDiscard && (\n        <option\n          style={{color: Colors.ORANGE2}}\n          value={typeCheck<OcdActionOrUnknown>('DISC')}\n        >\n          Discard\n        </option>\n      )}\n      {item.canGift && (\n        <option value={typeCheck<OcdActionOrUnknown>('GIFT')}>\n          Send as gift\n        </option>\n      )}\n      {item.canStash && (\n        <option value={typeCheck<OcdActionOrUnknown>('CLAN')}>\n          Put in clan stash\n        </option>\n      )}\n      {item.canPulverize && (\n        <option\n          style={\n            shouldWarnOnPulverize(item) ? {color: Colors.ORANGE2} : undefined\n          }\n          value={typeCheck<OcdActionOrUnknown>('PULV')}\n        >\n          Pulverize\n        </option>\n      )}\n      {item.canMake && (\n        <option value={typeCheck<OcdActionOrUnknown>('MAKE')}>Craft...</option>\n      )}\n      {item.canUntinker && (\n        <option value={typeCheck<OcdActionOrUnknown>('UNTN')}>Untinker</option>\n      )}\n      {item.canUse && (\n        <option value={typeCheck<OcdActionOrUnknown>('USE')}>Use</option>\n      )}\n      {item.canCloset && (\n        <option value={typeCheck<OcdActionOrUnknown>('CLST')}>Closet</option>\n      )}\n      {item.canDisplay && (\n        <option value={typeCheck<OcdActionOrUnknown>('DISP')}>Display</option>\n      )}\n      <option value={typeCheck<OcdActionOrUnknown>('TODO')}>Reminder</option>\n    </HTMLSelect>\n  );\n});\n","import {\n  Checkbox,\n  FormGroup,\n  InputGroup,\n  Intent,\n  NumericInput,\n} from '@blueprintjs/core';\nimport {OcdItem, OcdRule} from '@ocd-cleanup/common';\nimport React, {useCallback} from 'react';\nimport {MAX_MALL_PRICE, shouldWarnOnPulverize} from '../util';\nimport './OcdRulePicker.css';\nimport {\n  OcdActionOrUnknown,\n  SelectOcdAction,\n  UNKNOWN_OCD_ACTION,\n} from './SelectOcdAction';\n\n// Note: We use one condition per each conditional option, which allows the\n// backend to decide what can be done with each item.\nexport const OcdRulePicker = ({\n  item,\n  rule,\n  onChange,\n}: {\n  item: Readonly<OcdItem>;\n  /**\n   * Callback that accepts a new rule, or `null` if the user changed the rule\n   * to \"(uncategorized)\".\n   * The argument is the new rule, or an updater function that takes the\n   * previous OCD rule as argument and returns a new OCD rule.\n   */\n  onChange?: (newRuleOrReducer: React.SetStateAction<OcdRule | null>) => void;\n  rule: Readonly<OcdRule> | null;\n}) => {\n  const handleActionChange = useCallback(\n    (action: OcdActionOrUnknown) => {\n      if (!onChange) return;\n      onChange(oldRule => {\n        if (action === oldRule?.action) return oldRule;\n\n        // If the action type changes to another action that requires additional\n        // parameters, initialize these parameters.\n        // Note: This means that additional parameters are NOT remembered when\n        // the user switches an action. This may be undesirable...perhaps use\n        // some internal state to maintain this, or let the parent component\n        // handle it?\n        if (action === UNKNOWN_OCD_ACTION) {\n          return null;\n        } else if (action === 'GIFT') {\n          return {...oldRule, action, message: '', recipent: ''};\n        } else if (action === 'MAKE') {\n          return {\n            ...oldRule,\n            action,\n            shouldUseCreatableOnly: false,\n            targetItem: '',\n          };\n        } else if (action === 'MALL') {\n          return {...oldRule, action, minPrice: 0};\n        } else if (action === 'TODO') {\n          return {...oldRule, action, message: ''};\n        } else {\n          return {...oldRule, action};\n        }\n      });\n    },\n    [onChange]\n  );\n\n  let helperText;\n  let intent;\n\n  if (rule) {\n    if (rule.action === 'PULV' && shouldWarnOnPulverize(item)) {\n      helperText = 'You will pulverize an untradable item.';\n      intent = Intent.WARNING;\n    } else if (rule.action === 'DISC') {\n      helperText = 'You will gain no meat from discarding.';\n      intent = Intent.WARNING;\n    }\n  }\n\n  return (\n    <FormGroup\n      className=\"OcdRulePicker\"\n      helperText={helperText}\n      intent={intent}\n    >\n      {/* Wrap child elements inside a <div>. This separates them from the\n          helper text <div>, which is injected by the outer <FormGroup>.\n          This separation allows the children to be arranged on a single \"row\"\n          with the helper text under them. */}\n      <div className=\"OcdRulePicker__Inputs\">\n        <SelectOcdAction\n          className=\"OcdRulePicker__Child\"\n          item={item}\n          onChange={handleActionChange}\n          value={rule ? rule.action : UNKNOWN_OCD_ACTION}\n        />\n\n        {!rule ? null : rule.action === 'GIFT' ? (\n          <>\n            <FormGroup\n              className=\"OcdRulePicker__Child\"\n              contentClassName=\"OcdRulePicker__InputGiftRecipent\"\n              helperText={!rule.recipent && 'No recipent name'}\n              inline\n              intent={rule.recipent ? undefined : Intent.DANGER}\n              label=\"to\"\n            >\n              <InputGroup\n                className=\"OcdRulePicker__InputText\"\n                intent={rule.recipent ? undefined : Intent.DANGER}\n                onChange={e => onChange?.({...rule, recipent: e.target.value})}\n                placeholder=\"Player name\"\n                small\n                value={rule.recipent}\n              />\n            </FormGroup>\n            <FormGroup\n              className=\"OcdRulePicker__Child\"\n              contentClassName=\"OcdRulePicker__InputGiftMessage\"\n              inline\n              label=\"with\"\n            >\n              <InputGroup\n                className=\"OcdRulePicker__InputText\"\n                onChange={e => onChange?.({...rule, message: e.target.value})}\n                placeholder=\"Kmail message\"\n                small\n                value={rule.message}\n              />\n            </FormGroup>\n          </>\n        ) : rule.action === 'MAKE' ? (\n          <>\n            <FormGroup\n              className=\"OcdRulePicker__Child\"\n              contentClassName=\"OcdRulePicker__InputMakeTarget\"\n              helperText={!rule.targetItem && 'No item name'}\n              inline\n              intent={!rule.targetItem ? Intent.DANGER : undefined}\n              label=\"into\"\n            >\n              <InputGroup\n                className=\"OcdRulePicker__InputText\"\n                intent={!rule.targetItem ? Intent.DANGER : undefined}\n                onChange={e =>\n                  onChange?.({...rule, targetItem: e.target.value})\n                }\n                placeholder=\"Item name\"\n                small\n                value={rule.targetItem}\n              />\n            </FormGroup>\n            <Checkbox\n              checked={rule.shouldUseCreatableOnly}\n              className=\"OcdRulePicker__Child OcdRulePicker__Checkbox\"\n              onChange={e =>\n                onChange?.({\n                  ...rule,\n                  shouldUseCreatableOnly: e.currentTarget.checked,\n                })\n              }\n            >\n              <span className=\"OcdRulePicker__CheckBoxText\">\n                Only use available ingredients\n              </span>\n            </Checkbox>\n          </>\n        ) : rule.action === 'MALL' ? (\n          <FormGroup\n            className=\"OcdRulePicker__Child\"\n            contentClassName=\"OcdRulePicker__InputMallMinPrice\"\n            inline\n            label=\"min price\"\n          >\n            <NumericInput\n              majorStepSize={100}\n              max={MAX_MALL_PRICE}\n              min={0}\n              minorStepSize={null}\n              onValueChange={value => {\n                if (Number.isInteger(value)) {\n                  onChange?.({\n                    ...rule,\n                    minPrice: Math.max(0, Math.min(MAX_MALL_PRICE, value)),\n                  });\n                }\n              }}\n              stepSize={1}\n              value={rule.minPrice}\n            />\n          </FormGroup>\n        ) : rule.action === 'TODO' ? (\n          <FormGroup\n            className=\"OcdRulePicker__Child\"\n            contentClassName=\"OcdRulePicker__InputTodoMessage\"\n            inline\n            label=\"with message:\"\n          >\n            <InputGroup\n              className=\"OcdRulePicker__InputText\"\n              onChange={e => onChange?.({...rule, message: e.target.value})}\n              placeholder=\"Enter reminder message\"\n              small\n              value={rule.message}\n            />\n          </FormGroup>\n        ) : null}\n      </div>\n    </FormGroup>\n  );\n};\n","import {\n  AnchorButton,\n  Button,\n  ButtonGroup,\n  NumericInput,\n  Tag,\n  UL,\n} from '@blueprintjs/core';\nimport {Classes as Popover2Classes, Popover2} from '@blueprintjs/popover2';\nimport {\n  OcdItem,\n  OcdRule,\n  OcdRuleset,\n  ReadonlyInventoryState,\n  ReadonlyOcdRuleset,\n} from '@ocd-cleanup/common';\nimport classNames from 'classnames';\nimport React, {useCallback, useEffect, useMemo, useRef} from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport {areEqual, FixedSizeList} from 'react-window';\nimport './OcdItemTable.css';\nimport {OcdRulePicker} from './OcdRulePicker';\n\n/**\n * Adds a zero-width space (ZWSP) after each comma (`,`) in the given string.\n * This allows the `overflow-wrap: break-word` CSS rule to break long numbers\n * across multiple lines.\n */\nconst addZwspAfterComma = (str: string) => str.replace(/,/g, ',\\u200B');\n\n/**\n * Launches the in-game item description page in a popup window.\n * @param descid Item descid\n */\nconst itemDescriptionPopup = (descid: string) => {\n  window\n    .open(`/desc_item.php?whichitem=${descid}`, 'name', 'height=200,width=214')\n    ?.focus();\n};\n\nexport type RuleChangeHandler = (\n  itemId: number,\n  newRuleOrReducer: React.SetStateAction<OcdRule | null>\n) => void;\n\ninterface OcdItemTableRowProps extends React.ComponentProps<'div'> {\n  inventory: ReadonlyInventoryState;\n  item: Readonly<OcdItem>;\n  onRuleChange: RuleChangeHandler;\n  rule: Readonly<OcdRule | null>;\n}\n\n/**\n * Row component for `<OcdItemTable/>`.\n */\nconst OcdItemTableRow = React.memo(function OcdItemTableRow({\n  className,\n  inventory,\n  item,\n  onRuleChange,\n  rule,\n  ...restProps\n}: OcdItemTableRowProps) {\n  return (\n    <div className={`OcdItemTable__Row ${className || ''}`} {...restProps}>\n      <div className=\"OcdItemTable__Cell OcdItemTable__ColumnItemName\">\n        <AnchorButton\n          className=\"OcdItemTable__ItemImageLink\"\n          minimal\n          onClick={useCallback(() => itemDescriptionPopup(item.descid), [\n            item.descid,\n          ])}\n          title=\"View item description\"\n        >\n          {useMemo(\n            () => (\n              <img\n                className=\"OcdItemTable__ItemImage\"\n                alt={item.name}\n                src={`/images/itemimages/${item.image}`}\n              />\n            ),\n            [item]\n          )}\n        </AnchorButton>\n        <AnchorButton\n          className=\"OcdItemTable__ItemNameLink\"\n          href={`https://kol.coldfront.net/thekolwiki/index.php/Special:Search?search=${item.name}&go=Go`}\n          minimal\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          title=\"Visit KoL wiki page\"\n        >\n          {useMemo(\n            () => (\n              <>\n                <span dangerouslySetInnerHTML={{__html: item.name}}></span>\n                {inventory.inventory[item.id] > 0 && (\n                  <>\n                    {' '}\n                    <i>({inventory.inventory[item.id]})</i>\n                  </>\n                )}\n              </>\n            ),\n            [inventory, item]\n          )}\n        </AnchorButton>\n      </div>\n      <div className=\"OcdItemTable__Cell OcdItemTable__ColumnClosetAmount\">\n        {inventory.closet[item.id] || 0}\n      </div>\n      <div className=\"OcdItemTable__Cell OcdItemTable__ColumnStorageAmount\">\n        {inventory.storage[item.id] || 0}\n      </div>\n      <div className=\"OcdItemTable__Cell OcdItemTable__ColumnDisplayCaseAmount\">\n        {inventory.displayCase[item.id] || 0}\n      </div>\n      <div className=\"OcdItemTable__Cell OcdItemTable__ColumnMallPrice\">\n        {item.mallPrice && addZwspAfterComma(item.mallPrice.toLocaleString())}\n        {item.mallPrice != null && item.isMallPriceAtMinimum && (\n          <Tag\n            className=\"OcdItemTable__ColumnMallPrice--minimum\"\n            htmlTitle=\"Is at minimum mall price\"\n            intent=\"primary\"\n            minimal\n          >\n            min\n          </Tag>\n        )}\n      </div>\n      <div className=\"OcdItemTable__Cell OcdItemTable__ColumnKeepAmount\">\n        <NumericInput\n          className=\"OcdItemTable__InputKeepAmount\"\n          disabled={!rule || rule.action === 'KEEP'}\n          fill\n          majorStepSize={10}\n          min={0}\n          minorStepSize={null}\n          onValueChange={useCallback(\n            (value: number) => {\n              if (Number.isInteger(value)) {\n                onRuleChange(\n                  item.id,\n                  rule => rule && {...rule, keepAmount: value}\n                );\n              }\n            },\n            [item.id, onRuleChange]\n          )}\n          stepSize={1}\n          value={rule?.keepAmount || 0}\n        />\n      </div>\n      <div className=\"OcdItemTable__Cell OcdItemTable__ColumnAction\">\n        <OcdRulePicker\n          item={item}\n          onChange={useCallback(\n            newRuleOrReducer => onRuleChange(item.id, newRuleOrReducer),\n            [item.id, onRuleChange]\n          )}\n          rule={rule}\n        />\n      </div>\n    </div>\n  );\n},\nareEqual);\n\ninterface OcdItemTableRowData {\n  inventory: ReadonlyInventoryState;\n  items: readonly Readonly<OcdItem>[];\n  ocdRules: ReadonlyOcdRuleset;\n  onRuleChange: RuleChangeHandler;\n}\n\ninterface OcdItemTablePropsBase {\n  /**\n   * Whether the Reset button is disabled.\n   */\n  disableReset?: boolean;\n  /**\n   * Whether the Save button is disabled.\n   */\n  disableSave?: boolean;\n  /** Inventory state. Used to show item quantities for each row. */\n  inventory: ReadonlyInventoryState;\n  /** Items to display in the table. */\n  items: readonly Readonly<OcdItem>[];\n  /**\n   * OCD cleanup ruleset.\n   * If an item in `items` does not have a rule here, a default rule (\"UNKN\") is\n   * used.\n   */\n  ocdRules: ReadonlyOcdRuleset;\n  /**\n   * Callback that is called when an OCD rule is modified.\n   * The argument is a function that takes the previous OCD ruleset as argument\n   * and returns a new OCD ruleset (Think `setState()` with updater callbacks).\n   *\n   * This implementation is necessary to prevent the entire table from being\n   * re-rendered (causing lag) on every input change.\n   */\n  onChange?: (updater: (prevOcdRules: OcdRuleset) => OcdRuleset) => void;\n  /**\n   * Called when the user clicks the Reset button.\n   */\n  onReset?: () => void;\n  /**\n   * Called when the user edits a rule for an item.\n   * If not given, the default implementation calls `onChange` instead.\n   */\n  onRuleChange?: RuleChangeHandler;\n  /**\n   * Called when the user clicks the Save button.\n   */\n  onSave?: () => void;\n}\n\ninterface OcdItemTableProps\n  extends OcdItemTablePropsBase,\n    Omit<React.ComponentProps<'div'>, keyof OcdItemTablePropsBase> {}\n\nexport const OcdItemTable = React.memo(function OcdItemTable({\n  className,\n  disableReset,\n  disableSave,\n  inventory,\n  items,\n  ocdRules,\n  onChange,\n  onRuleChange,\n  onReset,\n  onSave,\n  ...restProps\n}: OcdItemTableProps) {\n  const defaultRuleChangeHandler = useCallback(\n    (itemId: number, newRuleOrReducer: React.SetStateAction<OcdRule | null>) =>\n      onChange?.(prevOcdRules => {\n        const newRule =\n          typeof newRuleOrReducer === 'function'\n            ? newRuleOrReducer(prevOcdRules[itemId] || null)\n            : newRuleOrReducer;\n        if (newRule) return {...prevOcdRules, [itemId]: newRule};\n        else {\n          const {[itemId]: _removed, ...restOcdRules} = prevOcdRules;\n          return restOcdRules;\n        }\n      }),\n    [onChange]\n  );\n\n  // Smooth scrolling (behavior: \"smooth\") via keyboard is tricky.\n  // When the user holds down on the arrow up/down or page up/down keys,\n  // onKeyDown() fires way too fast, overloading the browser and causing\n  // scrolling to become extremely jittery.\n  // I tried multiple ways of debouncing this:\n  //\n  // 1. Using lodash.throttle()\n  //    - Was quite janky and forced me to set unreasonably high throttle\n  //      delays, on the order of ~500ms for page up/down. Even then, it was\n  //      unreliably janky.\n  // 2. Manually debouncing using requestAnimationFrame() or setTimeout()\n  //    - This was worse than using lodash.throttle().\n  // 3. Using `isScrolling`\n  //    - Much more reliable than the above. However, it caused long pauses\n  //      between scrolls when the user holds down a scrolling key. Also, it\n  //      didn't prevent doScroll() from being called multiple times before the\n  //      component registered `isScrolling`.\n  //\n  // I eventually landed on a combination of (2) and (3) to successfully\n  // debounce scrolling. This is still quite slow, but almost jitter-free.\n\n  // Use requestAnimationFrame() and isScrolling to throttle scroll events\n  const scrollTimerRef = useRef<number>();\n  const isScrollingRef = useRef(false);\n\n  /**\n   * Debounced scrolling function\n   * @param type\n   * @param amount Position for `to`, offset for `by`\n   */\n  const doScroll = useCallback((type: 'to' | 'by', amount: number) => {\n    if (isScrollingRef.current) return;\n    if (scrollTimerRef.current !== undefined) return;\n    scrollTimerRef.current = window.requestAnimationFrame(() => {\n      scrollTimerRef.current = undefined;\n      outerListRef.current?.[type === 'by' ? 'scrollBy' : 'scrollTo']({\n        behavior: 'smooth',\n        top: amount,\n      });\n    });\n  }, []);\n  // Cancel any remaining scrolling events if we are unmounting\n  useEffect(\n    () => () => {\n      if (scrollTimerRef.current !== undefined) {\n        window.cancelAnimationFrame(scrollTimerRef.current);\n      }\n    },\n    []\n  );\n\n  // Manually implement Page Up/Down. Based on:\n  // - https://github.com/bvaughn/react-window/issues/46#issuecomment-416073707\n  // - https://sung.codes/blog/2019/05/07/scrolling-with-page-up-down-keys-in-react-window/\n  const innerListRef = useRef<HTMLElement>(null);\n  const outerListRef = useRef<HTMLElement>(null);\n\n  const PAGE_HEIGHT = 600;\n  const ROW_HEIGHT = 60;\n\n  const itemData = useMemo<OcdItemTableRowData>(\n    () => ({\n      inventory,\n      items,\n      ocdRules,\n      onRuleChange: onRuleChange || defaultRuleChangeHandler,\n    }),\n    [defaultRuleChangeHandler, inventory, items, ocdRules, onRuleChange]\n  );\n  const itemKeyCallback = useCallback(\n    (index: number, data: OcdItemTableRowData) => data.items[index].id,\n    []\n  );\n\n  const editorButtons = useMemo(\n    () => (\n      <ButtonGroup className=\"OcdItemTable__EditorButtons\">\n        <Button\n          disabled={disableSave}\n          icon=\"saved\"\n          onClick={onSave}\n          text=\"Save all\"\n        />\n        <Button\n          disabled={disableReset}\n          icon=\"reset\"\n          onClick={onReset}\n          text=\"Discard changes\"\n        />\n        <Popover2\n          className=\"OcdItemTable__PopperFix\"\n          popoverClassName={Popover2Classes.POPOVER2_CONTENT_SIZING}\n          content={\n            <p>\n              Select an action for each item. These actions will tell\n              OCD-Cleanup how to process each item:\n              <UL>\n                <li>\n                  OCD-Cleanup will warn you about uncategorized items, but will\n                  not touch them.\n                </li>\n                <li>\n                  \"Mall sale\" will use the lowest mall price <i>at cleanup</i>,\n                  but never below the \"min price\".\n                </li>\n                <li>\"Send as gift\" actually uses Kmail, not the gift shop.</li>\n                <li>\n                  \"Crafting\" can use up other ingredients needed for the recipe,\n                  even if you marked them as \"Keep all\".\n                </li>\n                <li>\n                  \"Pulverize\" will send items to Smashbot if you can't use\n                  Pulverize or Malus, but only in aftercore.\n                </li>\n                <li>\n                  \"Reminder\" will show a reminder message during cleanup, but\n                  won't touch the item.\n                </li>\n              </UL>\n            </p>\n          }\n        >\n          <Button icon=\"help\" text=\"Help\" />\n        </Popover2>\n      </ButtonGroup>\n    ),\n    [disableReset, disableSave, onReset, onSave]\n  );\n\n  // This function must be a stable value for React to properly use memoization.\n  // Since the data prop changes whenever the OCD ruleset is modified, this\n  // component itself does not benefit from `React.memo()`. However, the\n  // underlying component _does_ benefit from `React.memo()`.\n  const OcdItemTableRowWrapper = useCallback(function OcdItemTableRowWrapper({\n    data: {ocdRules, onRuleChange, inventory, items},\n    index,\n    style,\n    isScrolling = false,\n  }: {\n    data: OcdItemTableRowData;\n    index: number;\n    style?: React.CSSProperties;\n    isScrolling?: boolean;\n  }) {\n    isScrollingRef.current = isScrolling;\n    return (\n      <OcdItemTableRow\n        inventory={inventory}\n        item={items[index]}\n        onRuleChange={onRuleChange}\n        rule={ocdRules[items[index].id]}\n        style={style}\n      />\n    );\n  },\n  []);\n\n  return (\n    <div className={classNames('OcdItemTable', className)} {...restProps}>\n      {editorButtons}\n      <div className=\"OcdItemTable__TableWrapper\">\n        <AutoSizer disableWidth>\n          {({height: measuredHeight}) => (\n            <div\n              className=\"OcdItemTable__Inner\"\n              onKeyDown={event => {\n                if (event.key === 'ArrowDown') {\n                  if (event.currentTarget === event.target) {\n                    doScroll('by', ROW_HEIGHT * 3);\n                  }\n                } else if (event.key === 'ArrowUp') {\n                  if (event.currentTarget === event.target) {\n                    doScroll('by', -ROW_HEIGHT * 3);\n                  }\n                } else if (event.key === 'PageDown') {\n                  doScroll('by', PAGE_HEIGHT);\n                } else if (event.key === 'PageUp') {\n                  doScroll('by', -PAGE_HEIGHT);\n                } else if (event.key === 'Home') {\n                  doScroll('to', 0);\n                } else if (event.key === 'End') {\n                  if (innerListRef.current) {\n                    doScroll(\n                      'to',\n                      parseFloat(innerListRef.current.style.height)\n                    );\n                  }\n                }\n              }}\n              tabIndex={-1}\n            >\n              <div className=\"OcdItemTable__HeaderRow\">\n                <div className=\"OcdItemTable__HeaderCell OcdItemTable__ColumnItemName\">\n                  Item (Amount)\n                </div>\n                <div className=\"OcdItemTable__HeaderCell OcdItemTable__ColumnClosetAmount\">\n                  <abbr title=\"Amount in Closet\">C</abbr>\n                </div>\n                <div className=\"OcdItemTable__HeaderCell OcdItemTable__ColumnStorageAmount\">\n                  <abbr title=\"Amount in Storage\">S</abbr>\n                </div>\n                <div className=\"OcdItemTable__HeaderCell OcdItemTable__ColumnDisplayCaseAmount\">\n                  <abbr title=\"Amount in Display Case\">D</abbr>\n                </div>\n                <div className=\"OcdItemTable__HeaderCell OcdItemTable__ColumnMallPrice\">\n                  <abbr title=\"5th lowest mall price\">Price</abbr>\n                </div>\n                <div className=\"OcdItemTable__HeaderCell OcdItemTable__ColumnKeepAmount\">\n                  Keep\n                </div>\n                <div className=\"OcdItemTable__HeaderCell OcdItemTable__ColumnAction\">\n                  Action\n                </div>\n              </div>\n              <FixedSizeList\n                className=\"OcdItemTable__Body\"\n                height={measuredHeight}\n                innerRef={innerListRef}\n                itemCount={items.length}\n                itemData={itemData}\n                itemKey={itemKeyCallback}\n                itemSize={ROW_HEIGHT}\n                outerRef={outerListRef}\n                overscanCount={15}\n                useIsScrolling\n                width=\"100%\"\n              >\n                {OcdItemTableRowWrapper}\n              </FixedSizeList>\n            </div>\n          )}\n        </AutoSizer>\n      </div>\n      {editorButtons}\n    </div>\n  );\n});\n","import {H3, NonIdealState, Spinner, Tab, Tabs} from '@blueprintjs/core';\nimport {\n  CLEANUP_TABLES_CATEGORIZED_ROUTE,\n  OcdItem,\n  OcdRule,\n  OcdRuleset,\n  ReadonlyOcdRuleset,\n} from '@ocd-cleanup/common';\nimport React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport {useAsyncCallback} from 'react-async-hook';\nimport useSWR from 'swr';\nimport {fetchGetCleanupTableCategorized, fetchSaveOcdRuleset} from '../api';\nimport {setErrorToast, setSavingToast, showInfoToast} from '../toaster';\nimport {ocdActionToString, typeCheck} from '../util';\nimport {OcdItemTable, RuleChangeHandler} from './OcdItemTable';\nimport './PanelCategorizedItems.css';\n\nconst OCD_TAB_TYPES = {\n  all: 0,\n  closet: 0,\n  craft: 0,\n  display: 0,\n  dispose: 0,\n  gift: 0,\n  inventory: 0,\n  keep: 0,\n  mall: 0,\n  pulverize: 0,\n  reminder: 0,\n  search: 0,\n  stash: 0,\n  untinker: 0,\n  use: 0,\n};\n\n/**\n * Note: Tab types do not match OCD actions 1:1. For example, autosell (AUTO)\n * and discard (DISC) actions are shown together under \"dispose\".\n */\ntype OcdTabType = keyof typeof OCD_TAB_TYPES;\nconst isOcdTabType = (tabId: unknown): tabId is OcdTabType =>\n  typeof tabId === 'string' && OCD_TAB_TYPES.hasOwnProperty(tabId);\n\nconst categorizeItemsForTabs = (\n  items: readonly Readonly<OcdItem>[],\n  ocdRules: ReadonlyOcdRuleset\n) =>\n  items.reduce(\n    (itemsForTabs, item) => {\n      const rule = ocdRules[item.id];\n      if (rule) {\n        itemsForTabs.all.push(item);\n        switch (rule.action) {\n          case 'CLST':\n            itemsForTabs.closet.push(item);\n            break;\n          case 'MAKE':\n            itemsForTabs.craft.push(item);\n            break;\n          case 'AUTO':\n          case 'DISC':\n            itemsForTabs.dispose.push(item);\n            break;\n          case 'BREAK':\n          case 'USE':\n            itemsForTabs.use.push(item);\n            break;\n          case 'DISP':\n            itemsForTabs.display.push(item);\n            break;\n          case 'KEEP':\n            itemsForTabs.keep.push(item);\n            break;\n          case 'GIFT':\n            itemsForTabs.gift.push(item);\n            break;\n          case 'MALL':\n            itemsForTabs.mall.push(item);\n            break;\n          case 'PULV':\n            itemsForTabs.pulverize.push(item);\n            break;\n          case 'TODO':\n            itemsForTabs.reminder.push(item);\n            break;\n          case 'UNTN':\n            itemsForTabs.untinker.push(item);\n            break;\n          case 'CLAN':\n            itemsForTabs.stash.push(item);\n            break;\n        }\n      }\n      return itemsForTabs;\n    },\n    {\n      /** This includes only items that have an OCD rule defined. */\n      all: [] as OcdItem[],\n      closet: [] as OcdItem[],\n      craft: [] as OcdItem[],\n      display: [] as OcdItem[],\n      dispose: [] as OcdItem[],\n      gift: [] as OcdItem[],\n      keep: [] as OcdItem[],\n      mall: [] as OcdItem[],\n      pulverize: [] as OcdItem[],\n      reminder: [] as OcdItem[],\n      stash: [] as OcdItem[],\n      untinker: [] as OcdItem[],\n      use: [] as OcdItem[],\n    }\n  );\n\n/** Empty object used as placeholder for the OCD ruleset being edited. */\nconst EMPTY_OCD_RULES = Object.freeze({});\n\n/**\n * Panel for editing the player's OCD-Cleanup ruleset.\n */\nexport const PanelCategorizedItems = () => {\n  // Providing default values is not ideal.\n  // TODO: Add \"loading\" and \"network error\" states to <TabbedOcdRulesetEditor>\n  // and handle network errors properly.\n  const {data, error: loadingError, isValidating: isLoading, mutate} = useSWR(\n    CLEANUP_TABLES_CATEGORIZED_ROUTE,\n    async () => {\n      const response = await fetchGetCleanupTableCategorized();\n      // Items must be sorted by ID\n      response.result.items.sort((itemA, itemB) => itemA.id - itemB.id);\n      return response.result;\n    }\n  );\n\n  const [activeOcdRules, setActiveOcdRules] = useState<OcdRuleset>(\n    EMPTY_OCD_RULES\n  );\n\n  useEffect(() => {\n    // When the data is loaded for the first time, populate activeOcdRules with\n    // the server-sent ruleset\n    if (data?.ocdRules && activeOcdRules === EMPTY_OCD_RULES) {\n      setActiveOcdRules(data.ocdRules);\n    }\n  }, [activeOcdRules, data?.ocdRules]);\n\n  const handleReset = useCallback(\n    () => data?.ocdRules && setActiveOcdRules(data.ocdRules),\n    [data?.ocdRules]\n  );\n\n  const {\n    error: savingError,\n    execute: handleSave,\n    loading: isSaving,\n  } = useAsyncCallback(() =>\n    mutate(async data => {\n      if (!data) {\n        throw new Error(\"Cannot save ruleset when we don't have any data yet\");\n      }\n      const response = await fetchSaveOcdRuleset(activeOcdRules);\n      if (!response?.result?.success) {\n        throw new Error(`Unexpected response: ${JSON.stringify(response)}`);\n      }\n      return {...data, ocdRules: activeOcdRules};\n    }, false)\n  );\n  useEffect(\n    () => setErrorToast('savingError', savingError, 'Cannot save OCD rule'),\n    [savingError]\n  );\n  useEffect(() => setSavingToast('isSaving', isSaving, 'Saving OCD rules...'), [\n    isSaving,\n  ]);\n\n  const handleOcdRuleChange: RuleChangeHandler = useCallback(\n    (itemId, newRuleOrReducer) =>\n      setActiveOcdRules(prevOcdRules => {\n        const prevRule = prevOcdRules[itemId] as OcdRule | undefined;\n        const newRule =\n          typeof newRuleOrReducer === 'function'\n            ? newRuleOrReducer(prevOcdRules[itemId] || null)\n            : newRuleOrReducer;\n\n        if (prevRule?.action !== newRule?.action) {\n          const itemName = data?.items[itemId]?.name;\n          showInfoToast(\n            newRule\n              ? `Changed action for ${itemName} to \"${ocdActionToString(\n                  newRule.action\n                )}\"`\n              : `Removed action for ${itemName}`\n          );\n        }\n\n        if (newRule) return {...prevOcdRules, [itemId]: newRule};\n        else {\n          const {[itemId]: _removed, ...restOcdRules} = prevOcdRules;\n          return restOcdRules;\n        }\n      }),\n    [data?.items]\n  );\n\n  const [tabId, setTabId] = useState<OcdTabType>('all');\n\n  // Item categories are based on the active copy of the ruleset being edited,\n  // rather than the base copy. This allows the tabs to be updated in real time\n  // when the user edits the ruleset.\n  const itemsForTabs = useMemo(\n    () => categorizeItemsForTabs(data?.items ?? [], activeOcdRules || {}),\n    [data?.items, activeOcdRules]\n  );\n\n  const isTabAvailable = itemsForTabs.hasOwnProperty(tabId)\n    ? itemsForTabs[tabId as keyof typeof itemsForTabs].length > 0\n    : true;\n  const actualTabId = isTabAvailable ? tabId : 'all';\n\n  const hasChanges = Boolean(data && data.ocdRules !== activeOcdRules);\n\n  const makeItemTable = (items: OcdItem[]) =>\n    data && (\n      <OcdItemTable\n        className=\"PanelCategorizedItems__Table\"\n        disableReset={!hasChanges}\n        disableSave={!hasChanges}\n        inventory={data.inventory}\n        items={items}\n        ocdRules={activeOcdRules}\n        onRuleChange={handleOcdRuleChange}\n        onReset={handleReset}\n        onSave={handleSave}\n      />\n    );\n\n  return (\n    <>\n      <H3>Edit Cleanup Rules</H3>\n      {data ? (\n        <Tabs\n          className=\"PanelCategorizedItems__Tabs\"\n          onChange={tabId => isOcdTabType(tabId) && setTabId(tabId)}\n          renderActiveTabPanelOnly\n          selectedTabId={actualTabId}\n        >\n          <Tab\n            id={typeCheck<OcdTabType>('all')}\n            panel={makeItemTable(itemsForTabs.all)}\n            panelClassName=\"PanelCategorizedItems__TabItem\"\n            title=\"All\"\n          />\n          {itemsForTabs.keep.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('keep')}\n              panel={makeItemTable(itemsForTabs.keep)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Keep\"\n            />\n          )}\n          {itemsForTabs.mall.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('mall')}\n              panel={makeItemTable(itemsForTabs.mall)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Mall\"\n            />\n          )}\n          {itemsForTabs.pulverize.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('pulverize')}\n              panel={makeItemTable(itemsForTabs.pulverize)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Pulverize\"\n            />\n          )}\n          {itemsForTabs.use.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('use')}\n              panel={makeItemTable(itemsForTabs.use)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Use\"\n            />\n          )}\n          {itemsForTabs.closet.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('closet')}\n              panel={makeItemTable(itemsForTabs.closet)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Closet\"\n            />\n          )}\n          {itemsForTabs.stash.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('stash')}\n              panel={makeItemTable(itemsForTabs.stash)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Clan Stash\"\n            />\n          )}\n          {itemsForTabs.craft.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('craft')}\n              panel={makeItemTable(itemsForTabs.craft)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Crafting\"\n            />\n          )}\n          {itemsForTabs.untinker.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('untinker')}\n              panel={makeItemTable(itemsForTabs.untinker)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Untinkering\"\n            />\n          )}\n          {itemsForTabs.gift.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('gift')}\n              panel={makeItemTable(itemsForTabs.gift)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Gift\"\n            />\n          )}\n          {itemsForTabs.display.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('display')}\n              panel={makeItemTable(itemsForTabs.display)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Display\"\n            />\n          )}\n          {itemsForTabs.dispose.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('dispose')}\n              panel={makeItemTable(itemsForTabs.dispose)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Dispose\"\n            />\n          )}\n          {itemsForTabs.reminder.length > 0 && (\n            <Tab\n              id={typeCheck<OcdTabType>('reminder')}\n              panel={makeItemTable(itemsForTabs.reminder)}\n              panelClassName=\"PanelCategorizedItems__TabItem\"\n              title=\"Reminders\"\n            />\n          )}\n        </Tabs>\n      ) : isLoading ? (\n        <Spinner />\n      ) : (\n        <NonIdealState\n          icon={loadingError ? 'error' : 'info-sign'}\n          title={loadingError ? 'Failed to load data' : 'Data not loaded yet'}\n          description={\n            loadingError instanceof Error ? loadingError.message : undefined\n          }\n        />\n      )}\n    </>\n  );\n};\n","import {Code, InputGroup} from '@blueprintjs/core';\nimport React from 'react';\nimport './InputGroupAffixedFileName.css';\n\ninterface InputGroupAffixedFileNameProps\n  extends React.ComponentProps<typeof InputGroup> {\n  /** File name prefix, if any */\n  fileNamePrefix?: string;\n  /** File name suffix, if any */\n  fileNameSuffix?: string;\n}\n\n/**\n * `InputGroup` for a file name with predefined prefix and/or suffix.\n */\nexport const InputGroupAffixedFileName = React.memo(\n  function InputGroupAffixedFileName({\n    fileNamePrefix,\n    fileNameSuffix,\n    className = '',\n    ...restProps\n  }: InputGroupAffixedFileNameProps) {\n    return (\n      <InputGroup\n        className={`InputGroupAffixedFileName ${className}`}\n        leftElement={\n          fileNamePrefix ? (\n            <Code className=\"InputGroupAffixedFileName__Prefix\">\n              {fileNamePrefix}\n            </Code>\n          ) : undefined\n        }\n        rightElement={\n          fileNameSuffix ? (\n            <Code className=\"InputGroupAffixedFileName__Suffix\">\n              {fileNameSuffix}\n            </Code>\n          ) : undefined\n        }\n        {...restProps}\n      />\n    );\n  }\n);\n","import {\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Classes,\n  Code,\n  Dialog,\n  Divider,\n  FormGroup,\n  H3,\n  InputGroup,\n  Radio,\n  RadioGroup,\n} from '@blueprintjs/core';\nimport {CONFIG_ROUTE, OcdCleanupConfig} from '@ocd-cleanup/common';\nimport classNames from 'classnames';\nimport {dequal} from 'dequal/lite';\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useAsyncCallback} from 'react-async-hook';\nimport useSWR from 'swr';\nimport {fetchGetOcdCleanupConfig, fetchSaveOcdCleanupConfig} from '../api';\nimport {setErrorToast, setSavingToast} from '../toaster';\nimport {MAX_MALL_PRICE, ZWSP} from '../util';\nimport {InputGroupAffixedFileName} from './InputGroupAffixedFileName';\nimport './PanelConfig.css';\n\nconst OCD_RULESET_PREFIX = 'OCDdata_';\nconst OCD_STOCK_PREFIX = 'OCDstock_';\nconst TXT_SUFFIX = '.txt';\n\ninterface ChangedFileEntry {\n  /** Label for this entry, shown to the user. */\n  label: string;\n  newName: string;\n  oldName: string;\n}\n\n/**\n * A `<Dialog>` that asks whether to copy over existing data or start fresh when\n * the user changes the name of an OCD data file.\n * To properly animate closing transitions, this must be rendered even if the\n * dialog is closed.\n */\nconst DialogAskCopyOnSave = React.memo(function DialogAskCopyOnSave({\n  changedFiles = [],\n  isOpen,\n  onCancel,\n  onSaveWithCopy,\n  onSaveWithoutCopy,\n}: {\n  /** Array of data files changed. */\n  changedFiles?: readonly Readonly<ChangedFileEntry>[];\n  isOpen?: boolean;\n  onCancel?: () => void;\n  onSaveWithCopy?: () => void;\n  onSaveWithoutCopy?: () => void;\n}) {\n  return (\n    <Dialog\n      canEscapeKeyClose\n      canOutsideClickClose\n      icon=\"warning-sign\"\n      isOpen={isOpen}\n      onClose={onCancel}\n      title={`Changing data file name${changedFiles.length > 1 ? 's' : ''}`}\n    >\n      <div className={Classes.DIALOG_BODY}>\n        You are about the change your data file\n        {changedFiles.length > 1 ? \"s' names\" : \"'s name\"}:\n        <ul>\n          {changedFiles.map((entry, index) => (\n            <li key={index}>\n              {entry.label}: <Code>{entry.oldName}</Code> &rArr;{' '}\n              <Code>{entry.newName}</Code>\n            </li>\n          ))}\n        </ul>\n        Do you want to copy the contents of your previous data file\n        {changedFiles.length > 1 && 's'}?\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button\n            icon=\"duplicate\"\n            text=\"Copy contents\"\n            onClick={onSaveWithCopy}\n          />\n          <Button\n            icon=\"exchange\"\n            text={`Change file name${changedFiles.length > 1 ? 's' : ''} only`}\n            onClick={onSaveWithoutCopy}\n          />\n          <Button intent=\"danger\" text=\"Cancel\" onClick={onCancel} />\n        </div>\n      </div>\n    </Dialog>\n  );\n});\n\n/**\n * Helper function that checks if first value is identical to any of the values\n * in the given array.\n */\nconst isOneOf = <T,>(value: unknown, compareWith: readonly T[]): value is T =>\n  compareWith.includes(value as T);\n\nexport const PanelConfig = () => {\n  const {data: baseConfig, error: loadingError, mutate} = useSWR(\n    CONFIG_ROUTE,\n    async () => (await fetchGetOcdCleanupConfig()).result\n  );\n\n  const [config, setConfig] = useState<OcdCleanupConfig | null>(null);\n  // When the data is loaded for the first time, synchronize config with\n  // the server-sent config\n  useEffect(() => {\n    if (baseConfig && !config) {\n      setConfig(baseConfig);\n    }\n  }, [baseConfig, config]);\n\n  // Saving config is a complicated process that can open a popup dialog asking\n  // for the user's confirmation\n  // This is why we jump through loops and hoops...\n\n  const [dialogProps, setDialogProps] = useState<\n    React.ComponentProps<typeof DialogAskCopyOnSave>\n  >({});\n  const closeDialog = useCallback(() => setDialogProps({}), []);\n\n  const {\n    loading: isSaving,\n    execute: saveConfig,\n    error: savingError,\n  } = useAsyncCallback(\n    useCallback(\n      async (shouldCopyDataFiles?: boolean) => {\n        // These are logical errors and should never happen.\n        // If they do, we don't want to catch them\n        if (!config) {\n          throw new Error('Cannot save empty config');\n        }\n        if (!baseConfig) {\n          throw new Error('Cannot overwrite an empty config object');\n        }\n\n        const changedFiles: ChangedFileEntry[] = [];\n        if (config.dataFileName !== baseConfig.dataFileName) {\n          changedFiles.push({\n            label: 'Ruleset file',\n            oldName: OCD_RULESET_PREFIX + baseConfig.dataFileName + TXT_SUFFIX,\n            newName: OCD_RULESET_PREFIX + config.dataFileName + TXT_SUFFIX,\n          });\n        }\n        if (config.stockFileName !== baseConfig.stockFileName) {\n          changedFiles.push({\n            label: 'Stock file',\n            oldName: OCD_STOCK_PREFIX + baseConfig.stockFileName + TXT_SUFFIX,\n            newName: OCD_STOCK_PREFIX + config.stockFileName + TXT_SUFFIX,\n          });\n        }\n\n        // If shouldCopyDataFiles is not explicitly given, display a dialog asking\n        // the user what to do\n        if (changedFiles.length && shouldCopyDataFiles === undefined) {\n          setDialogProps({isOpen: true, changedFiles});\n          return;\n        }\n\n        const response = await fetchSaveOcdCleanupConfig(\n          config,\n          shouldCopyDataFiles\n        );\n        if (!response?.result?.success) {\n          throw new Error(`Unexpected response: ${JSON.stringify(response)}`);\n        }\n        mutate(config);\n      },\n      [baseConfig, config, mutate]\n    )\n  );\n\n  const hasChanges = !dequal(config, baseConfig);\n  const setConfigSafe = useCallback(\n    (configOrReducer: React.SetStateAction<OcdCleanupConfig>) =>\n      setConfig(\n        typeof configOrReducer === 'function'\n          ? config => config && configOrReducer(config)\n          : configOrReducer\n      ),\n    []\n  );\n\n  const isDisabled = !baseConfig || !config || isSaving;\n\n  useEffect(\n    () => setErrorToast('loadingError', loadingError, 'Cannot load config'),\n    [loadingError]\n  );\n  useEffect(\n    () => setErrorToast('savingError', savingError, 'Cannot save config'),\n    [savingError]\n  );\n  useEffect(() => setSavingToast('isSaving', isSaving, 'Saving config...'), [\n    isSaving,\n  ]);\n\n  const isMallMultiInputDisabled = isDisabled || !config?.canUseMallMulti;\n  return (\n    <>\n      <DialogAskCopyOnSave\n        onCancel={() => closeDialog()}\n        onSaveWithCopy={() => {\n          closeDialog();\n          saveConfig(true);\n        }}\n        onSaveWithoutCopy={() => {\n          closeDialog();\n          saveConfig(false);\n        }}\n        {...dialogProps}\n      />\n      <H3>Configure OCD-Cleanup</H3>\n\n      <fieldset className=\"PanelConfig__Section\">\n        <legend className=\"PanelConfig__SectionTitle\">General settings</legend>\n\n        <RadioGroup\n          disabled={isDisabled}\n          inline\n          label=\"Empty closet first before cleanup:\"\n          onChange={useCallback(\n            ({currentTarget: {value}}) => {\n              const emptyClosetMode = Number(value);\n              if (isOneOf(emptyClosetMode, [0, -1] as const)) {\n                setConfigSafe(config => ({...config, emptyClosetMode}));\n              }\n            },\n            [setConfigSafe]\n          )}\n          selectedValue={config?.emptyClosetMode}\n        >\n          <Radio\n            className={!config ? Classes.SKELETON : undefined}\n            label=\"Never\"\n            value={0}\n          />\n          <Radio\n            className={!config ? Classes.SKELETON : undefined}\n            label=\"Before Emptying Hangk's (recommended)\"\n            value={-1}\n          />\n        </RadioGroup>\n\n        <Divider className=\"PanelConfig__Divider\" />\n\n        <RadioGroup\n          disabled={isDisabled}\n          inline\n          label=\"Mall pricing: \"\n          onChange={useCallback(\n            ({currentTarget: {value}}) => {\n              if (isOneOf(value, ['auto', 'max'] as const)) {\n                setConfigSafe(config => ({...config, mallPricingMode: value}));\n              }\n            },\n            [setConfigSafe]\n          )}\n          selectedValue={config?.mallPricingMode}\n        >\n          <Radio\n            className={!config ? Classes.SKELETON : undefined}\n            label=\"Automatic\"\n            value=\"auto\"\n          />\n          <Radio\n            className={!config ? Classes.SKELETON : undefined}\n            label={`${MAX_MALL_PRICE.toLocaleString()} meat (ignores \"min price\")`}\n            value=\"max\"\n          />\n        </RadioGroup>\n\n        <Divider className=\"PanelConfig__Divider\" />\n\n        <Checkbox\n          checked={Boolean(config?.simulateOnly)}\n          className={!config ? Classes.SKELETON : undefined}\n          disabled={isDisabled}\n          onChange={({currentTarget: {checked}}) =>\n            setConfigSafe(config => ({...config, simulateOnly: checked}))\n          }\n        >\n          Simulate only <small>(no items will be cleaned up)</small>\n        </Checkbox>\n      </fieldset>\n\n      <fieldset className=\"PanelConfig__Section\">\n        <legend className=\"PanelConfig__SectionTitle\">Mall multi setup</legend>\n        <Checkbox\n          checked={Boolean(config?.canUseMallMulti)}\n          className={!config ? Classes.SKELETON : undefined}\n          disabled={isDisabled}\n          onChange={({currentTarget: {checked}}) =>\n            setConfigSafe(config => ({...config, canUseMallMulti: checked}))\n          }\n        >\n          Use mall multi\n        </Checkbox>\n        <FormGroup\n          className=\"PanelConfig__FormGroupAligned\"\n          disabled={isMallMultiInputDisabled}\n          inline\n          intent={\n            !isMallMultiInputDisabled && !config?.mallMultiName\n              ? 'warning'\n              : undefined\n          }\n          label=\"Mall multi name:\"\n          helperText={\n            !isMallMultiInputDisabled && !config?.mallMultiName\n              ? 'No multi account'\n              : ZWSP\n          }\n        >\n          <InputGroup\n            className={!config ? Classes.SKELETON : undefined}\n            disabled={isMallMultiInputDisabled}\n            onChange={({target: {value}}) =>\n              setConfigSafe(config => ({...config, mallMultiName: value}))\n            }\n            placeholder={isMallMultiInputDisabled ? '' : 'Enter player name'}\n            value={config?.mallMultiName || ''}\n          />\n        </FormGroup>\n        <FormGroup\n          className=\"PanelConfig__FormGroupAligned\"\n          disabled={isDisabled || !config?.canUseMallMulti}\n          inline\n          label=\"Mall multi Kmail text:\"\n        >\n          <InputGroup\n            className={!config ? Classes.SKELETON : undefined}\n            disabled={isDisabled || !config?.canUseMallMulti}\n            onChange={({target: {value}}) =>\n              setConfigSafe(config => ({\n                ...config,\n                mallMultiKmailMessage: value,\n              }))\n            }\n            placeholder={isMallMultiInputDisabled ? '' : 'Enter Kmail message'}\n            value={config?.mallMultiKmailMessage || ''}\n          />\n        </FormGroup>\n      </fieldset>\n\n      <fieldset className=\"PanelConfig__Section\">\n        <legend className=\"PanelConfig__SectionTitle\">Data files</legend>\n        <FormGroup\n          className=\"PanelConfig__FormGroupAligned\"\n          disabled={isDisabled}\n          inline\n          label=\"Ruleset file:\"\n        >\n          <InputGroupAffixedFileName\n            className={classNames(\n              'PanelConfig_InputFileName',\n              !config && Classes.SKELETON\n            )}\n            disabled={isDisabled}\n            fileNamePrefix={OCD_RULESET_PREFIX}\n            fileNameSuffix={TXT_SUFFIX}\n            onChange={useCallback(\n              ({target: {value}}) =>\n                setConfigSafe(config => ({...config, dataFileName: value})),\n              [setConfigSafe]\n            )}\n            value={config?.dataFileName || ''}\n          />\n        </FormGroup>\n        <FormGroup\n          className=\"PanelConfig__FormGroupAligned\"\n          disabled={isDisabled}\n          inline\n          label=\"Stock file:\"\n        >\n          <InputGroupAffixedFileName\n            className={classNames(\n              'PanelConfig_InputFileName',\n              !config && Classes.SKELETON\n            )}\n            disabled={isDisabled}\n            fileNamePrefix={OCD_STOCK_PREFIX}\n            fileNameSuffix={TXT_SUFFIX}\n            onChange={useCallback(\n              ({target: {value}}) =>\n                setConfigSafe(config => ({...config, stockFileName: value})),\n              [setConfigSafe]\n            )}\n            value={config?.stockFileName || ''}\n          />\n        </FormGroup>\n      </fieldset>\n\n      <ButtonGroup>\n        <Button\n          disabled={isDisabled || !hasChanges}\n          icon=\"floppy-disk\"\n          onClick={useCallback(() => saveConfig(), [saveConfig])}\n          text=\"Save\"\n        />\n        <Button\n          disabled={isDisabled || !hasChanges}\n          icon=\"reset\"\n          onClick={useCallback(() => baseConfig && setConfig(baseConfig), [\n            baseConfig,\n          ])}\n          text=\"Discard changes\"\n        />\n      </ButtonGroup>\n    </>\n  );\n};\n","import {\n  Callout,\n  Colors,\n  H3,\n  HTMLTable,\n  NonIdealState,\n  Spinner,\n} from '@blueprintjs/core';\nimport {STATISTICS_ROUTE} from '@ocd-cleanup/common';\nimport React, {useMemo} from 'react';\nimport useSWR from 'swr';\nimport {fetchGetStatistics} from '../api';\nimport './PanelInformation.css';\n\nconst BULLET = <span className=\"PanelInformation__Bullet\">&#8943;</span>;\n\n/**\n * Panel that acts as the \"home page\", and displays general information about\n * the player's cleanup rules.\n */\nexport const PanelInformation = () => {\n  const {data, isValidating: isLoading, error: loadingError} = useSWR(\n    STATISTICS_ROUTE,\n    async () => (await fetchGetStatistics()).result\n  );\n\n  const categorizedCount = useMemo(\n    () =>\n      data\n        ? Object.values(data.categorizedItemCounts).reduce(\n            (acc, sum) => acc + sum\n          )\n        : 0,\n    [data]\n  );\n\n  return (\n    <div>\n      <H3>\n        <a\n          href=\"https://github.com/Loathing-Associates-Scripting-Society/OCD-Cleanup\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          OCD-Cleanup Manager\n        </a>\n      </H3>\n      <p>\n        Brought to you by{' '}\n        <a\n          href=\"https://github.com/Loathing-Associates-Scripting-Society\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Loathing Associates Scripting Society\n        </a>\n      </p>\n      <Callout intent=\"warning\" title=\"Manager v2 is in alpha\">\n        Using this <i>may</i> destroy your OCD-Cleanup configuration. Use at\n        your own risk.\n        <br />\n        The{' '}\n        <a href=\"/relay_OCD-Cleanup_Manager.ash?relay=true\">\n          classic OCD-Cleanup Manager\n        </a>{' '}\n        is still available.\n      </Callout>\n      {data ? (\n        categorizedCount > 0 ? (\n          <HTMLTable\n            bordered\n            className=\"PanelInformation__VerticalTable\"\n            condensed\n          >\n            <tr>\n              <th\n                style={\n                  data.uncategorizedItemCount > 0\n                    ? {color: Colors.ORANGE1}\n                    : undefined\n                }\n              >\n                Uncategorized (in inventory)\n              </th>\n              <td\n                style={\n                  data.uncategorizedItemCount > 0\n                    ? {color: Colors.ORANGE1}\n                    : undefined\n                }\n              >\n                {data.uncategorizedItemCount}\n              </td>\n            </tr>\n            <tr>\n              <th>Items in Ruleset</th>\n              <td>{categorizedCount}</td>\n            </tr>\n            <tr>\n              <th>{BULLET} Keep All</th>\n              <td>{data.categorizedItemCounts.KEEP}</td>\n            </tr>\n            <tr>\n              <th>{BULLET} Mallsell</th>\n              <td>{data.categorizedItemCounts.MALL}</td>\n            </tr>\n            <tr>\n              <th>{BULLET} Autosell/Discard</th>\n              <td>\n                {data.categorizedItemCounts.AUTO +\n                  data.categorizedItemCounts.DISC}\n              </td>\n            </tr>\n            <tr>\n              <th>{BULLET} Pulverize</th>\n              <td>{data.categorizedItemCounts.PULV}</td>\n            </tr>\n            <tr>\n              <th>{BULLET} Use or break</th>\n              <td>\n                {data.categorizedItemCounts.BREAK +\n                  data.categorizedItemCounts.USE}\n              </td>\n            </tr>\n            <tr>\n              <th>{BULLET} Put in closet</th>\n              <td>{data.categorizedItemCounts.CLST}</td>\n            </tr>\n            <tr>\n              <th>{BULLET} Put in clan stash</th>\n              <td>{data.categorizedItemCounts.CLAN}</td>\n            </tr>\n            <tr>\n              <th>{BULLET} Crafting</th>\n              <td>{data.categorizedItemCounts.MAKE}</td>\n            </tr>\n            <tr>\n              <th>{BULLET} Untinker</th>\n              <td>{data.categorizedItemCounts.UNTN}</td>\n            </tr>\n            <tr>\n              <th>{BULLET} Send as gift</th>\n              <td>{data.categorizedItemCounts.GIFT}</td>\n            </tr>\n            <tr>\n              <th>{BULLET} Put in display case</th>\n              <td>{data.categorizedItemCounts.DISP}</td>\n            </tr>\n            <tr>\n              <th>{BULLET} Remind me later</th>\n              <td>{data.categorizedItemCounts.TODO}</td>\n            </tr>\n          </HTMLTable>\n        ) : (\n          <NonIdealState\n            icon=\"help\"\n            description='If this is your first time using OCD-Cleanup, you can create cleanup rules for your items in the \"Add Items\" tab.'\n            title=\"Your OCD-Cleanup ruleset is empty or missing.\"\n          />\n        )\n      ) : isLoading ? (\n        <Spinner />\n      ) : (\n        <NonIdealState\n          icon={loadingError ? 'error' : 'info-sign'}\n          title={loadingError ? 'Failed to load data' : 'Data not loaded yet'}\n          description={\n            loadingError instanceof Error ? loadingError.message : undefined\n          }\n        />\n      )}\n    </div>\n  );\n};\n","import {\n  Button,\n  ButtonGroup,\n  FormGroup,\n  H3,\n  NonIdealState,\n  Spinner,\n} from '@blueprintjs/core';\nimport {\n  CLEANUP_TABLES_UNCATEGORIZED_ROUTE,\n  OcdRuleset,\n} from '@ocd-cleanup/common';\nimport {dequal} from 'dequal/lite';\nimport React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport {useAsyncCallback} from 'react-async-hook';\nimport useSWR from 'swr';\nimport {fetchGetCleanupTableUncategorized, fetchPatchOcdRuleset} from '../api';\nimport {setErrorToast, setSavingToast} from '../toaster';\nimport {OcdItemTable} from './OcdItemTable';\nimport './PanelUncategorizedItems.css';\n\nconst EMPTY_OCD_RULES = {};\n\nexport const PanelUncategorizedItems = () => {\n  // Major assumptions:\n  //\n  // - data.items contains _only_ items that are uncategorized, i.e. the server\n  //   performs the filtering for us.\n  // - ocdRules always starts as an empty ruleset. Since data.items has already\n  //   been curated, there is no need to retrieve the entire ruleset from the\n  //   server.\n  const {\n    data,\n    error: loadingError,\n    isValidating: isLoadingData,\n    mutate,\n  } = useSWR(CLEANUP_TABLES_UNCATEGORIZED_ROUTE, async () => {\n    const response = await fetchGetCleanupTableUncategorized();\n    // Items must be sorted by ID\n    response.result.items.sort((itemA, itemB) => itemA.id - itemB.id);\n    return response.result;\n  });\n\n  const [ocdRules, setOcdRules] = useState<OcdRuleset>(EMPTY_OCD_RULES);\n  const resetOcdRules = useCallback(() => setOcdRules(EMPTY_OCD_RULES), []);\n\n  const hasChanges = useMemo(() => !dequal(ocdRules, EMPTY_OCD_RULES), [\n    ocdRules,\n  ]);\n\n  const {\n    error: savingError,\n    execute: doSave,\n    loading: isSaving,\n  } = useAsyncCallback(async () => {\n    const response = await fetchPatchOcdRuleset(ocdRules);\n    if (!response?.result?.success) {\n      throw new Error(`Unexpected response: ${JSON.stringify(response)}`);\n    }\n    mutate();\n    resetOcdRules();\n  });\n\n  useEffect(\n    () => setErrorToast('savingError', savingError, 'Cannot save OCD rule'),\n    [savingError]\n  );\n  useEffect(() => setSavingToast('isSaving', isSaving, 'Saving OCD rules...'), [\n    isSaving,\n  ]);\n\n  const setAllItemsToMall = useCallback(\n    () =>\n      data &&\n      setOcdRules(({...ocdRules}) => {\n        for (const item of data.items) {\n          if (item.canMall) {\n            ocdRules[item.id] = {action: 'MALL', minPrice: 0};\n          }\n        }\n        return ocdRules;\n      }),\n    [data]\n  );\n  const setAllItemsToCloset = useCallback(\n    () =>\n      data &&\n      setOcdRules(({...ocdRules}) => {\n        for (const item of data.items) {\n          if (item.canCloset) {\n            ocdRules[item.id] = {action: 'CLST'};\n          }\n        }\n        return ocdRules;\n      }),\n    [data]\n  );\n  const setAllItemsToKeep = useCallback(\n    () =>\n      data &&\n      setOcdRules(({...ocdRules}) => {\n        for (const item of data.items) {\n          ocdRules[item.id] = {action: 'KEEP'};\n        }\n        return ocdRules;\n      }),\n    [data]\n  );\n\n  return (\n    <>\n      <H3>Uncategorized Items in Your Inventory</H3>\n      {data ? (\n        data.items.length > 0 ? (\n          <>\n            <FormGroup inline label=\"Categorize all items as...\">\n              <ButtonGroup>\n                <Button\n                  disabled={\n                    !data.items.some(\n                      item =>\n                        item.canMall && ocdRules[item.id]?.action !== 'MALL'\n                    )\n                  }\n                  onClick={setAllItemsToMall}\n                >\n                  Mallsell\n                </Button>\n                <Button\n                  disabled={\n                    !data.items.some(\n                      item =>\n                        item.canCloset && ocdRules[item.id]?.action !== 'CLST'\n                    )\n                  }\n                  onClick={setAllItemsToCloset}\n                >\n                  Closet\n                </Button>\n                <Button\n                  disabled={\n                    !data.items.some(\n                      item => ocdRules[item.id]?.action !== 'KEEP'\n                    )\n                  }\n                  onClick={setAllItemsToKeep}\n                >\n                  Keep all\n                </Button>\n              </ButtonGroup>\n            </FormGroup>\n            <OcdItemTable\n              className=\"PanelUncategorizedItems__Table\"\n              disableReset={!hasChanges}\n              disableSave={!hasChanges}\n              inventory={data.inventory}\n              items={data.items}\n              ocdRules={ocdRules}\n              onChange={setOcdRules}\n              onReset={resetOcdRules}\n              onSave={doSave}\n            />\n          </>\n        ) : (\n          <NonIdealState\n            icon={\n              <img\n                alt=\"Nothing to do\"\n                src=\"/images/adventureimages/kg_accountant.gif\"\n              />\n            }\n            title=\"Your entire inventory has been categorized\"\n            description='\"Nothing to see here, please move along.\"'\n          />\n        )\n      ) : isLoadingData ? (\n        <Spinner />\n      ) : (\n        <NonIdealState\n          icon={loadingError ? 'error' : 'info-sign'}\n          title={loadingError ? 'Failed to load data' : 'Data not loaded yet'}\n          description={\n            loadingError instanceof Error ? loadingError.message : undefined\n          }\n        />\n      )}\n    </>\n  );\n};\n","import {Tab, Tabs} from '@blueprintjs/core';\nimport React, {useState} from 'react';\nimport './App.css';\nimport {PanelCategorizedItems} from './components/PanelCategorizedItems';\nimport {PanelConfig} from './components/PanelConfig';\nimport {PanelInformation} from './components/PanelInformation';\nimport {PanelUncategorizedItems} from './components/PanelUncategorizedItems';\nimport {typeCheck} from './util';\n\nconst MainTabs = Object.freeze({\n  categorized: 0,\n  config: 0,\n  information: 0,\n  uncategorized: 0,\n});\ntype MainTabType = keyof typeof MainTabs;\nconst DEFAULT_TAB = 'information';\n\n/**\n * Ensures that the given tab ID is a valid tab ID.\n * @param tabId Tab ID to check\n * @return Returns the original value of `tabId` if it is a valid tab ID.\n *    Otherwise, returns an appropriate default tab ID as fallback.\n */\nconst ensureValidTabType = (tabId: number | string): MainTabType =>\n  MainTabs.hasOwnProperty(tabId) ? (tabId as MainTabType) : DEFAULT_TAB;\n\nexport const App = () => {\n  const [tabId, setTabId] = useState<MainTabType>(DEFAULT_TAB);\n\n  return (\n    <div className=\"App\">\n      <Tabs\n        className=\"App__Tabs\"\n        id=\"mainTabs\"\n        onChange={tabId => setTabId(ensureValidTabType(tabId))}\n        renderActiveTabPanelOnly\n        selectedTabId={ensureValidTabType(tabId)}\n      >\n        <Tab\n          id={typeCheck<MainTabType>('information')}\n          panel={<PanelInformation />}\n          panelClassName=\"App__TabItem\"\n          title=\"Information\"\n        />\n        <Tab\n          id={typeCheck<MainTabType>('uncategorized')}\n          panel={<PanelUncategorizedItems />}\n          panelClassName=\"App__TabItem\"\n          title=\"Add Items\"\n        />\n        <Tab\n          id={typeCheck<MainTabType>('categorized')}\n          panel={<PanelCategorizedItems />}\n          panelClassName=\"App__TabItem\"\n          title=\"Edit Rules\"\n        />\n        <Tab\n          id={typeCheck<MainTabType>('config')}\n          panel={<PanelConfig />}\n          panelClassName=\"App__TabItem\"\n          title=\"Configuration\"\n        />\n      </Tabs>\n    </div>\n  );\n};\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}